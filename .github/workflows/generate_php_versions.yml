name: Generate PHP versions

on:
  workflow_call:
    inputs:
      ignore_versions:
        type: string
        required: false
        default: ""
    outputs:
      matrix_include:
        description: "matrix.include value for build action"
        value: ${{ jobs.prepare.outputs.matrix_include }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Get supported PHP versions
        id: supported_versions
        run: |
          curl -sSL "https://www.php.net/releases/index.php?json" | jq -c "[..| objects | .supported_versions? // empty] | flatten" > "versions.json"
      - name: Determine version and hash
        run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/php/php-src/git/matching-refs/tags" > "tags.json"
          jq -r '.[]' "versions.json" | while read VERSION; do
            jq -r '.[] | (.ref | sub("refs/tags/php-"; "")) + " " + .object.sha' "tags.json" \
            | grep -E "^${VERSION}\.[0-9]+ " \
            | sort -V \
            | tail -n1 >> "versions.txt"
          done
      - name: Filitering versions
        if: ${{ inputs.ignore_versions != '' }}
        run: |
          TEMPFILE="$(mktemp)"
          echo "${{ inputs.ignore_versions }}" | jq -r '.[]' | while read IGNORE; do
            grep -v "${IGNORE}" < "versions.txt" > "${TEMPFILE}"
            mv -f "${TEMPFILE}" "versions.txt"
          done
      - name: Generate version and hash list
        run: |
          jq -R -s -c 'split("\n") | map(select(length > 0)) | map(split(" ")) | map({version: .[0], minor: (.[0] | split(".") | .[0:2] | join(".")), hash: .[1]})' "versions.txt" > "version_and_hash.json"
      - name: Generate matrix include
        id: matrix_include
        run: |
          yq -o=json << 'EOF' > "mixin.json"
            - variant: ""
              configure_append: ""
              optimize_options_c_cpp: "-O2"
              optimize_options_ld: "-O1"
            - variant: "-debug"
              configure_append: "--enable-debug"
              optimize_options_c_cpp: "-O0"
              optimize_options_ld: "-O0"
            - variant: "-opt"
              configure_append: ""
              optimize_options_c_cpp: "-O3"
              optimize_options_ld: "-O2"
          EOF
          echo values=$(jq --argjson "mixin" "$(cat "mixin.json")" '[.[] | $mixin[] as $y | . + $y]' "version_and_hash.json") >> $GITHUB_OUTPUT
    outputs:
      matrix_include: ${{ steps.matrix_include.outputs.values }}
